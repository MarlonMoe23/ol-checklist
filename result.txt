Voy a actualizar la pÃ¡gina principal para incluir un campo de observaciones al final del formulario.

=== Start File ===
app/page.tsx
---
'use client';

import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Switch } from '@/components/ui/switch';
import { Label } from '@/components/ui/label';
import { useTheme } from 'next-themes';
import { Textarea } from "@/components/ui/textarea"

const questions = [
  'Â¿Las herramientas estÃ¡n organizadas y en su lugar asignado?',
  'Â¿Hay seÃ±alizaciÃ³n visual clara para ubicar herramientas, repuestos y equipos?',
  'Â¿El personal ha eliminado basura y objetos innecesarios del Ã¡rea de trabajo?',
  'Â¿Los pisos, estanterÃ­as y superficies estÃ¡n limpios y libres de polvo?',
  'Â¿Las Ã¡reas de trabajo estÃ¡n libres de derrames de lubricantes o sustancias quÃ­micas?',
  'Â¿Se aplican rutinas de limpieza diarias o semanales con responsables asignados?',
  'Â¿Los materiales, lubricantes y repuestos estÃ¡n etiquetados correctamente y almacenados en su sitio y segÃºn su categorÃ­a?',
  'Â¿Los pasillos y zonas de circulaciÃ³n estÃ¡n libres de obstÃ¡culos y claramente delimitados?',
  'Â¿Los equipos de seguridad (botiquÃ­n, extintores, EPP) estÃ¡n disponibles, visibles y en buen estado?',
  'Â¿La maquinaria y equipos elÃ©ctricos funcionan correctamente y sin seÃ±ales de deterioro?'
];

export default function Home() {
  const [answers, setAnswers] = useState<boolean[]>(new Array(10).fill(false));
  const [observations, setObservations] = useState('');
  const { theme, setTheme } = useTheme();

  const calculateScore = () => {
    const trueCount = answers.filter(answer => answer).length;
    return `${trueCount}/10`;
  };

  const handleShare = () => {
    const score = calculateScore();
    const date = new Date().toLocaleDateString();
    const message = `Checklist de InspecciÃ³n Diaria â€“ Taller/Bodega de Mantenimiento\n\nFecha: ${date}\nCalificaciÃ³n: ${score}\n\nResultados:\n${questions.map((q, i) => `${i + 1}. ${q}\nRespuesta: ${answers[i] ? 'SÃ­' : 'No'}\n`).join('\n')}\n\nObservaciones:\n${observations || 'Ninguna'}`;
    
    const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(message)}`;
    window.open(whatsappUrl, '_blank');
  };

  return (
    <div className="min-h-screen p-4 bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800">
      <Card className="max-w-2xl mx-auto p-6 shadow-lg bg-white dark:bg-gray-800">
        <div className="flex justify-between items-center mb-6">
          <h1 className="text-2xl font-bold text-gray-900 dark:text-white">
            Checklist de InspecciÃ³n Diaria
          </h1>
          <Button
            variant="ghost"
            size="icon"
            onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}
            aria-label={theme === 'dark' ? 'Cambiar a modo claro' : 'Cambiar a modo oscuro'}
          >
            {theme === 'dark' ? 'ðŸŒž' : 'ðŸŒ™'}
          </Button>
        </div>

        <div className="space-y-6">
          {questions.map((question, index) => (
            <div
              key={index}
              className="p-4 rounded-lg bg-gray-50 dark:bg-gray-700 transition-all duration-200 hover:shadow-md"
            >
              <div className="flex items-center justify-between gap-4">
                <Label 
                  htmlFor={`question-${index}`} 
                  className="flex-1 cursor-pointer"
                >
                  {index + 1}. {question}
                </Label>
                <Switch
                  id={`question-${index}`}
                  checked={answers[index]}
                  onCheckedChange={(checked) => {
                    const newAnswers = [...answers];
                    newAnswers[index] = checked;
                    setAnswers(newAnswers);
                  }}
                  aria-label={`Respuesta para: ${question}`}
                />
              </div>
            </div>
          ))}

          <div className="p-4 rounded-lg bg-gray-50 dark:bg-gray-700 transition-all duration-200 hover:shadow-md">
            <Label htmlFor="observations" className="text-lg font-semibold mb-2 block">
              Observaciones:
            </Label>
            <Textarea
              id="observations"
              placeholder="Ingrese sus observaciones aquÃ­..."
              className="min-h-[100px] w-full mt-2"
              value={observations}
              onChange={(e) => setObservations(e.target.value)}
            />
          </div>
        </div>

        <div className="mt-8 space-y-4">
          <div className="text-center text-2xl font-bold" role="status" aria-live="polite">
            CalificaciÃ³n: {calculateScore()}
          </div>
          <Button
            className="w-full"
            size="lg"
            onClick={handleShare}
            aria-label="Compartir resultados por WhatsApp"
          >
            Compartir por WhatsApp
          </Button>
        </div>
      </Card>
    </div>
  );
}
=== End File ===

=== Start File ===
components/ui/textarea.tsx
---
import * as React from "react"

import { cn } from "@/lib/utils"

export interface TextareaProps
  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}

const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
  ({ className, ...props }, ref) => {
    return (
      <textarea
        className={cn(
          "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Textarea.displayName = "Textarea"

export { Textarea }
=== End File ===

Los cambios principales incluyen:

1. AgreguÃ© un campo de observaciones usando el componente Textarea
2. Las observaciones se incluyen ahora en el mensaje de WhatsApp
3. El campo de observaciones tiene:
   - Etiqueta clara
   - Placeholder informativo
   - Altura mÃ­nima adecuada
   - Estilo consistente con el resto del formulario
   - Soporte para tema claro/oscuro
4. El mensaje de WhatsApp ahora incluye una secciÃ³n de observaciones al final

El campo de observaciones es completamente opcional y si no se ingresa nada, aparecerÃ¡ como "Ninguna" en el mensaje compartido.

Â¿Necesitas algÃºn ajuste adicional en el campo de observaciones o en alguna otra parte del formulario?